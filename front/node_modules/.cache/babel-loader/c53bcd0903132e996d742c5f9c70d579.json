{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/socket-squares-project/v1/src/components/SquaresPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Square from './Square';\nimport { useState, useRef } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlassPlus, faMagnifyingGlassMinus } from '@fortawesome/free-solid-svg-icons';\nimport { io, Socket } from \"socket.io-client\";\nimport \"./css/Squares.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HEIGHT_IN_SQUARES = 11;\nconst MAX_PIXEL_WIDTH = 600; //of each square\n\nconst MIN_PIXEL_WIDTH = 200;\n\nconst SquaresPage = () => {\n  _s();\n\n  const array = new Array(HEIGHT_IN_SQUARES ** 2);\n\n  for (let i = 0; i < array.length; i++) {\n    array[i] = i;\n  }\n\n  const [pixelWidth, setPixelWidth] = useState(500);\n  const scrollRef = useRef(); //reference to entire window of squares\n\n  const [socket, setSocket] = useState({});\n  const [isDown, setIsDown] = useState(false);\n  const [startX, setStartX] = useState(0);\n  const [startY, setStartY] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const [scrollTop, setScrollTop] = useState(0); //const [images, setImages] = useState(new Array(HEIGHT_IN_SQUARES**2))\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConnectionError, stetIsConnectionError] = useState(false); //TODO: set so array of states instead of state of entire array?\n\n  const onMouseDown = e => {\n    setIsDown(true);\n    const slider = scrollRef.current;\n    slider.classList.add(\"active\");\n    setStartX(e.pageX - slider.offsetLeft);\n    setStartY(e.pageY - slider.offsetTop);\n    setScrollLeft(slider.scrollLeft);\n    setScrollTop(slider.scrollTop);\n  };\n\n  const onMouseUp = () => {\n    setIsDown(false);\n    scrollRef.current.classList.remove(\"active\");\n  };\n\n  const onMouseMove = e => {\n    e.preventDefault();\n    if (!isDown) return;\n    const slider = scrollRef.current;\n    const x = e.pageX - slider.offsetLeft;\n    const y = e.pageY - slider.offsetTop;\n    const walkx = Math.floor(1.1 * (x - startX));\n    const walky = Math.floor(1.1 * (y - startY));\n    slider.scrollLeft = scrollLeft - walkx;\n    slider.scrollTop = scrollTop - walky;\n  };\n\n  const onMouseLeave = () => {\n    setIsDown(false);\n    scrollRef.current.classList.remove(\"active\");\n  }; //TODO: smart zoom, so that when user zooms the squares' relative positions is same on screen (so square that was centred before is now centred again)\n\n\n  const zoomIn = () => {\n    if (pixelWidth < MAX_PIXEL_WIDTH) {\n      setPixelWidth(pixelWidth + 100);\n    }\n  };\n\n  const zoomOut = () => {\n    if (pixelWidth > MIN_PIXEL_WIDTH) {\n      setPixelWidth(pixelWidth - 100);\n    }\n  };\n\n  useEffect(() => {\n    setSocket(io('http://localhost:3500'));\n  }, []);\n  useEffect(() => {\n    socket.on('connect_error', () => {\n      stetIsConnectionError(true);\n    });\n    socket.on('connect', () => {\n      stetIsConnectionError(false); //set scroll so centred on centre square\n\n      const slider = scrollRef.current;\n      slider.scrollLeft = (pixelWidth * HEIGHT_IN_SQUARES - slider.clientWidth) / 2;\n      slider.scrollTop = (pixelWidth * HEIGHT_IN_SQUARES - slider.clientHeight) / 2; //socket.emit(\"get-all-images\",setAllImages)\n\n      socket.emit(\"get-all-images\");\n      /*\n      setInterval(()=>{\n      socket.emit(\"get-all-images\",setAllImages)\n      },1000)\n      */\n      //socket.on(\"setImage\", (index,image) => {}); //set individual image\n    });\n    /*\n    socket.on('update-image',(index,img64) =>{\n      const newArr = images.map((val,i) =>{\n        if(i===index) return img64;\n        else return val;\n      })\n       setImages(...prev => prev.map((val,i) =>{\n        if(i===index) return img64;\n        else return val;\n      }));\n    })\n    */\n  }, [socket]);\n  /*\n  const setAllImages = (array) =>{\n    console.log(array)\n    setImages(array);\n  }\n  */\n\n  return isConnectionError ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Connection Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"zoom\",\n      id: \"zoom-plus\",\n      onClick: zoomIn,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faMagnifyingGlassPlus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"zoom\",\n      id: \"zoom-minus\",\n      onClick: zoomOut,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faMagnifyingGlassMinus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"squares-container\",\n      style: {\n        gridTemplateRows: `repeat(${HEIGHT_IN_SQUARES}, ${pixelWidth}px)`,\n        gridTemplateColumns: `repeat(${HEIGHT_IN_SQUARES}, ${pixelWidth}px)`\n      },\n      ref: scrollRef,\n      onMouseDown: onMouseDown,\n      onMouseUp: onMouseUp,\n      onMouseMove: onMouseMove,\n      onMouseLeave: onMouseLeave,\n      children: array.map((e, i) => /*#__PURE__*/_jsxDEV(Square, {\n        text: e,\n        index: i,\n        socket: socket\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 30\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SquaresPage, \"S7X6lC0Puz/woNrq0gQLVeWLQcQ=\");\n\n_c = SquaresPage;\nexport default SquaresPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SquaresPage\");","map":{"version":3,"names":["React","useEffect","Square","useState","useRef","FontAwesomeIcon","faMagnifyingGlassPlus","faMagnifyingGlassMinus","io","Socket","HEIGHT_IN_SQUARES","MAX_PIXEL_WIDTH","MIN_PIXEL_WIDTH","SquaresPage","array","Array","i","length","pixelWidth","setPixelWidth","scrollRef","socket","setSocket","isDown","setIsDown","startX","setStartX","startY","setStartY","scrollLeft","setScrollLeft","scrollTop","setScrollTop","isLoading","setIsLoading","isConnectionError","stetIsConnectionError","onMouseDown","e","slider","current","classList","add","pageX","offsetLeft","pageY","offsetTop","onMouseUp","remove","onMouseMove","preventDefault","x","y","walkx","Math","floor","walky","onMouseLeave","zoomIn","zoomOut","on","clientWidth","clientHeight","emit","gridTemplateRows","gridTemplateColumns","map"],"sources":["/home/ethanh/Desktop/socket-squares-project/v1/src/components/SquaresPage.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport Square from './Square'\nimport { useState, useRef } from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport { faMagnifyingGlassPlus, faMagnifyingGlassMinus } from '@fortawesome/free-solid-svg-icons';\n\nimport {io, Socket} from \"socket.io-client\"\n\nimport \"./css/Squares.css\"\n\nconst HEIGHT_IN_SQUARES = 11;\nconst MAX_PIXEL_WIDTH = 600; //of each square\nconst MIN_PIXEL_WIDTH = 200;\n\n\nconst SquaresPage = () => {\n  const array = new Array(HEIGHT_IN_SQUARES**2)\n  for(let i =0; i < array.length; i++){\n    array[i] = i;\n  }\n\n  const [pixelWidth, setPixelWidth] = useState(500);\n  const scrollRef = useRef(); //reference to entire window of squares\n  \n  const [socket, setSocket] = useState({})\n  const [isDown, setIsDown] = useState(false);\n  const [startX, setStartX] = useState(0);\n  const [startY, setStartY] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const [scrollTop, setScrollTop] = useState(0); \n  //const [images, setImages] = useState(new Array(HEIGHT_IN_SQUARES**2))\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConnectionError, stetIsConnectionError] = useState(false);\n\n  //TODO: set so array of states instead of state of entire array?\n\n  const onMouseDown = e =>{\n      setIsDown(true);\n      const slider = scrollRef.current\n      slider.classList.add(\"active\");\n\n      setStartX(e.pageX - slider.offsetLeft);\n      setStartY(e.pageY - slider.offsetTop);\n\n      setScrollLeft(slider.scrollLeft);\n      setScrollTop(slider.scrollTop);\n      \n  };\n\n  const onMouseUp = () =>{\n    setIsDown(false);\n    scrollRef.current.classList.remove(\"active\");\n\n  };\n\n  const onMouseMove = e =>{\n      e.preventDefault();\n      if(!isDown) return;\n      const slider = scrollRef.current\n      const x = e.pageX - slider.offsetLeft;\n      const y = e.pageY - slider.offsetTop;\n\n      const walkx = Math.floor(1.1*(x-startX));\n      const walky = Math.floor(1.1*(y-startY));\n\n      slider.scrollLeft = scrollLeft-walkx;\n      slider.scrollTop = scrollTop - walky;\n  }\n\n  const onMouseLeave= () => {\n    setIsDown(false);\n    scrollRef.current.classList.remove(\"active\");\n  }\n\n  //TODO: smart zoom, so that when user zooms the squares' relative positions is same on screen (so square that was centred before is now centred again)\n  const zoomIn = ()=>{\n    if(pixelWidth<MAX_PIXEL_WIDTH){\n      setPixelWidth(pixelWidth + 100);\n    }\n  }\n\n  const zoomOut = ()=>{\n    if(pixelWidth>MIN_PIXEL_WIDTH){\n      setPixelWidth(pixelWidth - 100);\n    }\n  }\n\n  useEffect(()=>{\n      \n    setSocket(io('http://localhost:3500'))\n    \n},[])\n\n\n  useEffect(()=>{\n    socket.on('connect_error', ()=>{\n      stetIsConnectionError(true)\n    })\n    \n    socket.on('connect', ()=>{\n      \n      stetIsConnectionError(false)   //set scroll so centred on centre square\n      const slider = scrollRef.current;\n      slider.scrollLeft = (pixelWidth*HEIGHT_IN_SQUARES - slider.clientWidth)/2\n      slider.scrollTop = (pixelWidth*HEIGHT_IN_SQUARES - slider.clientHeight) / 2\n      \n      //socket.emit(\"get-all-images\",setAllImages)\n      socket.emit(\"get-all-images\");\n\n      /*\n    setInterval(()=>{\n      socket.emit(\"get-all-images\",setAllImages)\n    },1000)\n    */\n      //socket.on(\"setImage\", (index,image) => {}); //set individual image\n\n      \n    })\n    \n    /*\n    socket.on('update-image',(index,img64) =>{\n      const newArr = images.map((val,i) =>{\n        if(i===index) return img64;\n        else return val;\n      })\n\n      setImages(...prev => prev.map((val,i) =>{\n        if(i===index) return img64;\n        else return val;\n      }));\n    })\n*/\n    \n  },[socket])\n\n  /*\n  const setAllImages = (array) =>{\n    console.log(array)\n    setImages(array);\n  }\n*/\n  \n  \n  return (\n    \n    isConnectionError\n    ? <p>Connection Error</p>\n    :\n\n    <>\n      <button className=\"zoom\" id=\"zoom-plus\" onClick={zoomIn}>\n        <FontAwesomeIcon icon={faMagnifyingGlassPlus} />\n      </button>\n\n      <button className=\"zoom\" id=\"zoom-minus\" onClick={zoomOut}>\n        <FontAwesomeIcon icon={faMagnifyingGlassMinus} />\n      </button>\n      \n      <div \n      id=\"squares-container\" \n      style= {{gridTemplateRows: `repeat(${HEIGHT_IN_SQUARES}, ${pixelWidth}px)`, \n              gridTemplateColumns: `repeat(${HEIGHT_IN_SQUARES}, ${pixelWidth}px)`}}\n      ref={scrollRef}\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n      onMouseMove={onMouseMove}\n      onMouseLeave={onMouseLeave}\n      >\n        {array.map((e, i) => <Square text={e} key={i} index={i} socket={socket}></Square>)}\n      </div>\n    </>\n  )\n}\n\nexport default SquaresPage"],"mappings":"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"},"metadata":{},"sourceType":"module"}